<div class="form-group">
  <%= f.label :category_id, :class => 'control-label col-lg-2' %>
  <div class="col-lg-10">
    <%= f.select :category_id, options_for_select(Category.select("id, title").map{|cate|[cate.title, cate.id]}, f.object.category_id), {include_blank: true}, class: 'form-control' %>
    <%=f.error_span(:category_id) %>
  </div>
</div>
<div class="form-group question_count_form_group">
  <%= f.label :question_count, class: 'control-label col-lg-2' %>
  <div class="col-lg-10">
    <%= f.select :question_count, options_for_select([[1,1], [3,3], [4,4]], f.object.question_count), {include_blank: true}, class: 'form-control' %>
  </div>
  <%=f.error_span(:description) %>
</div>
<div class="form-group">
  <%= f.label :description, :class => 'control-label col-lg-2' %>
  <div class="col-lg-10">
    <%= f.text_area :description, :class => 'form-control' %>
  </div>
  <%=f.error_span(:description) %>
</div>
<div class="form-group">
  <%= f.label :level_id, :class => 'control-label col-lg-2' %>
  <div class="col-lg-10">
    <%= f.select :level_id, options_for_select(Level.select("id, title").map{|level|[level.title, level.id]}, f.object.level_id), {include_blank: true}, class: 'form-control' %>
  </div>
  <%=f.error_span(:level_id) %>
</div>
<% question_group.questions.each_with_index do |question, inx| %>
  <div class="row question_group_question_row" id="question_group_<%= inx %>">
    <div class="col-sm-10 col-sm-offset-2">
      <div class="panel panel-default">
        <a class="panel-heading" data-toggle="collapse" href="#collapse<%= inx %>"><strong>Question <%= inx + 1 %></strong> (click to expand)</a>
        <div id="collapse<%= inx %>" class="panel-collapse collapse">
          <div class="panel-body">
            <%= f.fields_for :questions, question do |question_builder| %>
              <%= render partial: "questions/form", locals: {question: question, f: question_builder} %>
            <% end %>
          </div>
        </div>
      </div>
    </div>
  </div>
<% end %>
<script>
  var cate_question_count_mapping = {
    1 : [1],
    2 : [1],
    3 :[3,4]
  }
  function document_ready_callback(){
    var $category = $("#question_group_category_id");
    var $question_count = $(".question_count_form_group select");
    category_on_change_callback($category);
    question_count_change_callback($question_count);
    $category.on("change", function(){
      category_on_change_callback($("#question_group_category_id"));
    });
    $question_count.on("change", function(){
      question_count_change_callback($(".question_count_form_group select"));
    });
  }

  function category_on_change_callback($category){
    var $question_count = $(".question_count_form_group select");
    var category = parseInt($category.val());
    if(isNaN(category)){
      return;
    }
    var question_count = 1;
    if(category == 3){
      if(!isNaN(parseInt($question_count.val()))){
        question_count = parseInt($question_count.val());
      }else{
        question_count = cate_question_count_mapping[category][0];
      }
    }
    
    if(isNaN(question_count)){
      return;
    }
    $question_count.find("option[value='" + question_count + "']").prop("selected", true);
    question_count_change_callback($question_count)
  }

  function question_count_change_callback($question_count){
    var question_count = parseInt($question_count.val());
    if(isNaN(question_count)){
      return;
    }
    var $category = $("#question_group_category_id");
    var category = parseInt($category.val());
    if(isNaN(category)){
      return;
    }
    if($.inArray(question_count, cate_question_count_mapping[category]) == -1){
      alert("incorrect question_count and category selection");
    }else{
      $(".question_group_question_row").show();
      if(question_count == 1){
        $("#question_group_1").hide();
        $("#question_group_2").hide();
        $("#question_group_3").hide();
      }
      if(question_count == 3){
        $("#question_group_3").hide();
      }
    }
  }

  $(document).on('turbolinks:load', document_ready_callback);
</script>